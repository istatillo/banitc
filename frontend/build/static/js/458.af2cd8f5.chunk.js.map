{"version":3,"file":"static/js/458.af2cd8f5.chunk.js","mappings":"gWA+BA,EA1BqB,CACnB,CACEA,IAAIC,EAAAA,EAAAA,KACJC,QAAS,iBACTC,OAAQ,yBACRC,OAAQC,EACRC,IAAK,YACLC,SAAU,OAEZ,CACEP,IAAIC,EAAAA,EAAAA,KACJC,QAAS,qBACTC,OAAQ,sBACRC,OAAQI,EACRF,IAAK,UACLC,SAAU,KAEZ,CACEP,IAAIC,EAAAA,EAAAA,KACJC,QAAS,oBACTC,OAAQ,aACRC,OAAQK,EACRH,IAAK,aACLC,SAAU,Q,SCDd,EAzBqB,WACnB,OACE,8BACGG,EAAAA,KAAiB,gBAAGJ,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,OAAQF,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,OAAQH,EAA3C,EAA2CA,GAA3C,OAChB,iBACEW,UAAU,sDACV,WAAUL,EACV,oBAAkB,MAClB,iBAAgBC,EAChB,gBAAc,OALhB,WAQE,gBAAKI,UAAU,UAAf,UACE,gBAAKC,IAAKR,EAAQS,IAAKX,OAEzB,iBAAKS,UAAU,WAAf,WACE,cAAGA,UAAU,OAAb,SAAqBR,KACrB,wBAAKD,SAPFF,U,qBCTf,IAAIc,E,gCACJ,IAAIC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBzB,4HCQA,ICFA,MAJA,SAAkBO,GAChB,MAAuB,kBAATA,GAAqBC,EAAAA,KAAWD,IDG5CE,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBjD,MAjBA,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7ET,GAAQE,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,MAAMI,cAMzf,IAAKC,EAASb,GACZ,MAAMc,UAAU,+BAGlB,OAAOd,GEHT,MApBA,SAAYe,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQpB,KAAOA,KAK7C,GAHAsB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAIL,EAAI,EAAGA,EAAI,KAAMA,EACxBa,EAAIR,EAASL,GAAKc,EAAKd,GAGzB,OAAOa,EAGT,OAAOG,EAAUF","sources":["components/Teachers/TeachersBase.js","components/Teachers/TeachersCard.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport img1 from \"./images/teacher1.avif\";\r\nimport img2 from \"./images/teacher2.avif\";\r\nimport img3 from \"./images/teacher3.avif\";\r\n\r\nconst teachersBase = [\r\n  {\r\n    id: uuidv4(),\r\n    teacher: \"To'xtayev Orif\",\r\n    course: \"Kompyuter savodxonligi\",\r\n    imgUrl: img1,\r\n    aos: \"fade-left\",\r\n    aosDelay: \"400\",\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    teacher: \"Jo'rayev Istatillo\",\r\n    course: \"Frontend dasturlash\",\r\n    imgUrl: img2,\r\n    aos: \"zoom-in\",\r\n    aosDelay: \"0\",\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    teacher: \"Eshboyev Diyorbek\",\r\n    course: \"IT English\",\r\n    imgUrl: img3,\r\n    aos: \"fade-right\",\r\n    aosDelay: \"400\",\r\n  },\r\n];\r\nexport default teachersBase;\r\n","import teachersBase from \"./TeachersBase\";\r\n\r\nconst TeachersCard = () => {\r\n  return (\r\n    <>\r\n      {teachersBase.map(({ aos, aosDelay, imgUrl, teacher, course, id }) => (\r\n        <div\r\n          className=\"col-lg-4 col-md-6 col-12 mb-md-5 mb-4 teachers-card\"\r\n          data-aos={aos}\r\n          data-aos-duration=\"800\"\r\n          data-aos-delay={aosDelay}\r\n          data-aos-once=\"true\"\r\n          key={id}\r\n        >\r\n          <div className=\"img-box\">\r\n            <img src={imgUrl} alt={teacher} />\r\n          </div>\r\n          <div className=\"text-box\">\r\n            <p className=\"date\">{course}</p>\r\n            <h3>{teacher}</h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeachersCard;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["id","uuidv4","teacher","course","imgUrl","img1","aos","aosDelay","img2","img3","teachersBase","className","src","alt","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}